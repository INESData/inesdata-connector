/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java Plugin to add support for Java.
    id 'java'
    id 'pl.allegro.tech.build.axion-release' 
	id 'jacoco'
    id "org.sonarqube" 
	id "org.owasp.dependencycheck"  
    id 'maven-publish'
}

scmVersion {
    tag {
        prefix.set("${project.name}-v")
    }
}
version = scmVersion.version

repositories {
	// If using an org repo, mavenRepoUrl, mavenRepoUsername and mavenRepoPassword must be configured in ~/.gradle/gradle.properties, 
    //  project gradle.properties, env vars or command line.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html#sec:handling_credentials
    if (project.hasProperty('mavenRepoUrl')) {
        maven {
            name = 'mavenRepo'
            url mavenRepoUrl
            credentials(PasswordCredentials)
        }
    }
    // As a fallback, use Maven Central for resolving dependencies.
    mavenCentral()
    // Tried to use composite builds, but there is no support in VSCode
    mavenLocal()
}

dependencies {
    constraints {
        // Define dependency versions as constraints
        implementation 'org.apache.commons:commons-text:1.10.0'
    }

}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.9.3')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sonar {
	properties {
		// Recommended way to use the plugin. Compilation must be ensured
		// externally before calling the sonar task
		property "sonar.gradle.skipCompile", "true"
	}
}


dependencyCheck {
    failBuildOnCVSS = 7
    suppressionFile "suppressions.xml"
    analyzers {
		// To avoid trying to analyze DLL files
		assemblyEnabled=false
		ossIndex {
			// remote errors from the OSS Index (e.g. BAD GATEWAY, RATE LIMIT EXCEEDED)
			// will result in warnings only instead of failing execution.
			warnOnlyOnRemoteErrors = true
		}
    }
}

publishing {

    repositories {
        if (project.hasProperty('mavenPublishRepoSnapshotsUrl')) {
            maven {
                name = 'mavenPublishRepo'
                credentials(PasswordCredentials)
                url = version.endsWith('SNAPSHOT') ? mavenPublishRepoSnapshotsUrl : mavenPublishRepoReleasesUrl
            }
        }
    }
}